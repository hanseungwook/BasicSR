# Modified SRResNet w/o BN from:
# Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network

# general settings
name: 001_MSRResNet_WT_Pixel_MSE_x4_f64b16_ImageNet_1000k_B16G2_wandb
model_type: SRModel
scale: 4
num_gpu: 2  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: ImageNet
    type: PairedImageWTDataset
    dataroot_gt: /disk_c/han/data/ImageNet_lmdb/ImageNet_train_HR.lmdb
    dataroot_lq: /disk_c/han/data/ImageNet_lmdb/ImageNet_train_WT.lmdb
    filename_tmpl: '{}'
    io_backend:
      type: lmdb
      # type: disk

    gt_size: 256
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: ImageNet
    type: PairedImageWTDataset
    dataroot_gt: /disk_c/han/data/ImageNet_lmdb/ImageNet_val_HR.lmdb
    dataroot_lq: /disk_c/han/data/ImageNet_lmdb/ImageNet_val_WT.lmdb
    io_backend:
      type: lmdb

# network structures
network_g:
  type: MSRResNet_WT_Pixel 
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 16
  upscale: 4

# path
path:
  pretrain_model_g: ~
  strict_load: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [250000, 250000, 250000, 250000]
    restart_weights: [1, 1, 1, 1]
    eta_min: !!float 1e-7

  total_iter: 150000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: MSELoss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 5e3
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: basicsr-sr-resnet-wt-pixel-mse
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
